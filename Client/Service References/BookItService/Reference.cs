//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.BookItService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginStatus", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Enums")]
    public enum LoginStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongUserNameOrPassword = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidInput = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommunicationFailure = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Booking[] BookingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Role[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Booking[] Bookings {
            get {
                return this.BookingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingsField, value) != true)) {
                    this.BookingsField = value;
                    this.RaisePropertyChanged("Bookings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.CateringChoice[] CateringChoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.EquipmentChoice[] EquipmentChoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Person PersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.CateringChoice[] CateringChoices {
            get {
                return this.CateringChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.CateringChoicesField, value) != true)) {
                    this.CateringChoicesField = value;
                    this.RaisePropertyChanged("CateringChoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.EquipmentChoice[] EquipmentChoices {
            get {
                return this.EquipmentChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentChoicesField, value) != true)) {
                    this.EquipmentChoicesField = value;
                    this.RaisePropertyChanged("EquipmentChoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfParticipants {
            get {
                return this.NumberOfParticipantsField;
            }
            set {
                if ((this.NumberOfParticipantsField.Equals(value) != true)) {
                    this.NumberOfParticipantsField = value;
                    this.RaisePropertyChanged("NumberOfParticipants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Person Person {
            get {
                return this.PersonField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonField, value) != true)) {
                    this.PersonField = value;
                    this.RaisePropertyChanged("Person");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Person[] PeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Person[] People {
            get {
                return this.PeopleField;
            }
            set {
                if ((object.ReferenceEquals(this.PeopleField, value) != true)) {
                    this.PeopleField = value;
                    this.RaisePropertyChanged("People");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Booking[] BookingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Inventory[] InventoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Booking[] Bookings {
            get {
                return this.BookingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingsField, value) != true)) {
                    this.BookingsField = value;
                    this.RaisePropertyChanged("Bookings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Inventory[] Inventories {
            get {
                return this.InventoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoriesField, value) != true)) {
                    this.InventoriesField = value;
                    this.RaisePropertyChanged("Inventories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxParticipants {
            get {
                return this.MaxParticipantsField;
            }
            set {
                if ((this.MaxParticipantsField.Equals(value) != true)) {
                    this.MaxParticipantsField = value;
                    this.RaisePropertyChanged("MaxParticipants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CateringChoice", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class CateringChoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Booking BookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Catering CateringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CateringIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Booking Booking {
            get {
                return this.BookingField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingField, value) != true)) {
                    this.BookingField = value;
                    this.RaisePropertyChanged("Booking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingID {
            get {
                return this.BookingIDField;
            }
            set {
                if ((this.BookingIDField.Equals(value) != true)) {
                    this.BookingIDField = value;
                    this.RaisePropertyChanged("BookingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Catering Catering {
            get {
                return this.CateringField;
            }
            set {
                if ((object.ReferenceEquals(this.CateringField, value) != true)) {
                    this.CateringField = value;
                    this.RaisePropertyChanged("Catering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CateringID {
            get {
                return this.CateringIDField;
            }
            set {
                if ((this.CateringIDField.Equals(value) != true)) {
                    this.CateringIDField = value;
                    this.RaisePropertyChanged("CateringID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentChoice", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class EquipmentChoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Booking BookingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Equipment EquipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Booking Booking {
            get {
                return this.BookingField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingField, value) != true)) {
                    this.BookingField = value;
                    this.RaisePropertyChanged("Booking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingID {
            get {
                return this.BookingIDField;
            }
            set {
                if ((this.BookingIDField.Equals(value) != true)) {
                    this.BookingIDField = value;
                    this.RaisePropertyChanged("BookingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Equipment Equipment {
            get {
                return this.EquipmentField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentField, value) != true)) {
                    this.EquipmentField = value;
                    this.RaisePropertyChanged("Equipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipmentID {
            get {
                return this.EquipmentIDField;
            }
            set {
                if ((this.EquipmentIDField.Equals(value) != true)) {
                    this.EquipmentIDField = value;
                    this.RaisePropertyChanged("EquipmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Catering", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Catering : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AvailableFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AvailableToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.CateringChoice[] CateringChoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AvailableFrom {
            get {
                return this.AvailableFromField;
            }
            set {
                if ((this.AvailableFromField.Equals(value) != true)) {
                    this.AvailableFromField = value;
                    this.RaisePropertyChanged("AvailableFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AvailableTo {
            get {
                return this.AvailableToField;
            }
            set {
                if ((this.AvailableToField.Equals(value) != true)) {
                    this.AvailableToField = value;
                    this.RaisePropertyChanged("AvailableTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.CateringChoice[] CateringChoices {
            get {
                return this.CateringChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.CateringChoicesField, value) != true)) {
                    this.CateringChoicesField = value;
                    this.RaisePropertyChanged("CateringChoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Equipment", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Equipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.EquipmentChoice[] EquipmentChoicesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.EquipmentType EquipmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.EquipmentChoice[] EquipmentChoices {
            get {
                return this.EquipmentChoicesField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentChoicesField, value) != true)) {
                    this.EquipmentChoicesField = value;
                    this.RaisePropertyChanged("EquipmentChoices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.EquipmentType EquipmentType {
            get {
                return this.EquipmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentTypeField, value) != true)) {
                    this.EquipmentTypeField = value;
                    this.RaisePropertyChanged("EquipmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipmentTypeID {
            get {
                return this.EquipmentTypeIDField;
            }
            set {
                if ((this.EquipmentTypeIDField.Equals(value) != true)) {
                    this.EquipmentTypeIDField = value;
                    this.RaisePropertyChanged("EquipmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentType", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class EquipmentType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Equipment[] EquipmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Equipment[] Equipments {
            get {
                return this.EquipmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentsField, value) != true)) {
                    this.EquipmentsField = value;
                    this.RaisePropertyChanged("Equipments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Inventory", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class Inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.InventoryType InventoryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.InventoryType InventoryType {
            get {
                return this.InventoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryTypeField, value) != true)) {
                    this.InventoryTypeField = value;
                    this.RaisePropertyChanged("InventoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryTypeID {
            get {
                return this.InventoryTypeIDField;
            }
            set {
                if ((this.InventoryTypeIDField.Equals(value) != true)) {
                    this.InventoryTypeIDField = value;
                    this.RaisePropertyChanged("InventoryTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryType", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Entities")]
    [System.SerializableAttribute()]
    public partial class InventoryType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.BookItService.Inventory[] InventoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.BookItService.Inventory[] Inventories {
            get {
                return this.InventoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoriesField, value) != true)) {
                    this.InventoriesField = value;
                    this.RaisePropertyChanged("Inventories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatus", Namespace="http://schemas.datacontract.org/2004/07/ITubsService.Enums")]
    public enum RequestStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidInput = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.IPersonManagement")]
    public interface IPersonManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManagement/Login", ReplyAction="http://tempuri.org/IPersonManagement/LoginResponse")]
        Client.BookItService.LoginStatus Login(out Client.BookItService.Person person, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManagement/Logout", ReplyAction="http://tempuri.org/IPersonManagement/LogoutResponse")]
        Client.BookItService.RequestStatus Logout(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManagement/GetAllOfUsers", ReplyAction="http://tempuri.org/IPersonManagement/GetAllOfUsersResponse")]
        Client.BookItService.RequestStatus GetAllOfUsers(out Client.BookItService.Person[] people, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManagement/GetByEmail", ReplyAction="http://tempuri.org/IPersonManagement/GetByEmailResponse")]
        Client.BookItService.RequestStatus GetByEmail(string token, ref Client.BookItService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManagement/GetByToken", ReplyAction="http://tempuri.org/IPersonManagement/GetByTokenResponse")]
        Client.BookItService.RequestStatus GetByToken(out Client.BookItService.Person person, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonManagementChannel : Client.BookItService.IPersonManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonManagementClient : System.ServiceModel.ClientBase<Client.BookItService.IPersonManagement>, Client.BookItService.IPersonManagement {
        
        public PersonManagementClient() {
        }
        
        public PersonManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.LoginStatus Login(out Client.BookItService.Person person, string username, string password) {
            return base.Channel.Login(out person, username, password);
        }
        
        public Client.BookItService.RequestStatus Logout(string token) {
            return base.Channel.Logout(token);
        }
        
        public Client.BookItService.RequestStatus GetAllOfUsers(out Client.BookItService.Person[] people, string token) {
            return base.Channel.GetAllOfUsers(out people, token);
        }
        
        public Client.BookItService.RequestStatus GetByEmail(string token, ref Client.BookItService.Person person) {
            return base.Channel.GetByEmail(token, ref person);
        }
        
        public Client.BookItService.RequestStatus GetByToken(out Client.BookItService.Person person, string token) {
            return base.Channel.GetByToken(out person, token);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.IBookingManagement")]
    public interface IBookingManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/GetBooking", ReplyAction="http://tempuri.org/IBookingManagement/GetBookingResponse")]
        Client.BookItService.RequestStatus GetBooking(ref Client.BookItService.Booking booking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/GetBookingsByDate", ReplyAction="http://tempuri.org/IBookingManagement/GetBookingsByDateResponse")]
        Client.BookItService.RequestStatus GetBookingsByDate(out Client.BookItService.Booking[] bookings, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/GetBookingsByPerson", ReplyAction="http://tempuri.org/IBookingManagement/GetBookingsByPersonResponse")]
        Client.BookItService.RequestStatus GetBookingsByPerson(out Client.BookItService.Booking[] bookings, Client.BookItService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/CreateBooking", ReplyAction="http://tempuri.org/IBookingManagement/CreateBookingResponse")]
        Client.BookItService.RequestStatus CreateBooking(string token, ref Client.BookItService.Booking newBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/ChangeTimeOfBooking", ReplyAction="http://tempuri.org/IBookingManagement/ChangeTimeOfBookingResponse")]
        Client.BookItService.RequestStatus ChangeTimeOfBooking(string token, ref Client.BookItService.Booking changedBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/ChangeBookingStatus", ReplyAction="http://tempuri.org/IBookingManagement/ChangeBookingStatusResponse")]
        Client.BookItService.RequestStatus ChangeBookingStatus(string token, ref Client.BookItService.Booking changedBooking);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/DeleteBooking", ReplyAction="http://tempuri.org/IBookingManagement/DeleteBookingResponse")]
        Client.BookItService.RequestStatus DeleteBooking(string token, int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/AddCateringToBooking", ReplyAction="http://tempuri.org/IBookingManagement/AddCateringToBookingResponse")]
        Client.BookItService.RequestStatus AddCateringToBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/ChangeTimeOfCateringChoice", ReplyAction="http://tempuri.org/IBookingManagement/ChangeTimeOfCateringChoiceResponse")]
        Client.BookItService.RequestStatus ChangeTimeOfCateringChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/RemoveCateringChoice", ReplyAction="http://tempuri.org/IBookingManagement/RemoveCateringChoiceResponse")]
        Client.BookItService.RequestStatus RemoveCateringChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/AddEquipmentToBooking", ReplyAction="http://tempuri.org/IBookingManagement/AddEquipmentToBookingResponse")]
        Client.BookItService.RequestStatus AddEquipmentToBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/ChangeTimeOfEquipmentBooking", ReplyAction="http://tempuri.org/IBookingManagement/ChangeTimeOfEquipmentBookingResponse")]
        Client.BookItService.RequestStatus ChangeTimeOfEquipmentBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingManagement/RemoveEquipmentChoice", ReplyAction="http://tempuri.org/IBookingManagement/RemoveEquipmentChoiceResponse")]
        Client.BookItService.RequestStatus RemoveEquipmentChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingManagementChannel : Client.BookItService.IBookingManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingManagementClient : System.ServiceModel.ClientBase<Client.BookItService.IBookingManagement>, Client.BookItService.IBookingManagement {
        
        public BookingManagementClient() {
        }
        
        public BookingManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.RequestStatus GetBooking(ref Client.BookItService.Booking booking) {
            return base.Channel.GetBooking(ref booking);
        }
        
        public Client.BookItService.RequestStatus GetBookingsByDate(out Client.BookItService.Booking[] bookings, System.DateTime date) {
            return base.Channel.GetBookingsByDate(out bookings, date);
        }
        
        public Client.BookItService.RequestStatus GetBookingsByPerson(out Client.BookItService.Booking[] bookings, Client.BookItService.Person person) {
            return base.Channel.GetBookingsByPerson(out bookings, person);
        }
        
        public Client.BookItService.RequestStatus CreateBooking(string token, ref Client.BookItService.Booking newBooking) {
            return base.Channel.CreateBooking(token, ref newBooking);
        }
        
        public Client.BookItService.RequestStatus ChangeTimeOfBooking(string token, ref Client.BookItService.Booking changedBooking) {
            return base.Channel.ChangeTimeOfBooking(token, ref changedBooking);
        }
        
        public Client.BookItService.RequestStatus ChangeBookingStatus(string token, ref Client.BookItService.Booking changedBooking) {
            return base.Channel.ChangeBookingStatus(token, ref changedBooking);
        }
        
        public Client.BookItService.RequestStatus DeleteBooking(string token, int bookingId) {
            return base.Channel.DeleteBooking(token, bookingId);
        }
        
        public Client.BookItService.RequestStatus AddCateringToBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice) {
            return base.Channel.AddCateringToBooking(out editedBooking, token, cateringChoice);
        }
        
        public Client.BookItService.RequestStatus ChangeTimeOfCateringChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice) {
            return base.Channel.ChangeTimeOfCateringChoice(out editedBooking, token, cateringChoice);
        }
        
        public Client.BookItService.RequestStatus RemoveCateringChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.CateringChoice cateringChoice) {
            return base.Channel.RemoveCateringChoice(out editedBooking, token, cateringChoice);
        }
        
        public Client.BookItService.RequestStatus AddEquipmentToBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice) {
            return base.Channel.AddEquipmentToBooking(out editedBooking, token, equipmentChoice);
        }
        
        public Client.BookItService.RequestStatus ChangeTimeOfEquipmentBooking(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice) {
            return base.Channel.ChangeTimeOfEquipmentBooking(out editedBooking, token, equipmentChoice);
        }
        
        public Client.BookItService.RequestStatus RemoveEquipmentChoice(out Client.BookItService.Booking editedBooking, string token, Client.BookItService.EquipmentChoice equipmentChoice) {
            return base.Channel.RemoveEquipmentChoice(out editedBooking, token, equipmentChoice);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.ICateringManagement")]
    public interface ICateringManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICateringManagement/GetAllCatering", ReplyAction="http://tempuri.org/ICateringManagement/GetAllCateringResponse")]
        Client.BookItService.RequestStatus GetAllCatering(out Client.BookItService.Catering[] cateringItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICateringManagement/GetCatering", ReplyAction="http://tempuri.org/ICateringManagement/GetCateringResponse")]
        Client.BookItService.RequestStatus GetCatering(ref Client.BookItService.Catering catering);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICateringManagement/GetCateringChoice", ReplyAction="http://tempuri.org/ICateringManagement/GetCateringChoiceResponse")]
        Client.BookItService.RequestStatus GetCateringChoice(ref Client.BookItService.CateringChoice cateringChoice);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICateringManagementChannel : Client.BookItService.ICateringManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CateringManagementClient : System.ServiceModel.ClientBase<Client.BookItService.ICateringManagement>, Client.BookItService.ICateringManagement {
        
        public CateringManagementClient() {
        }
        
        public CateringManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CateringManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CateringManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CateringManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.RequestStatus GetAllCatering(out Client.BookItService.Catering[] cateringItems) {
            return base.Channel.GetAllCatering(out cateringItems);
        }
        
        public Client.BookItService.RequestStatus GetCatering(ref Client.BookItService.Catering catering) {
            return base.Channel.GetCatering(ref catering);
        }
        
        public Client.BookItService.RequestStatus GetCateringChoice(ref Client.BookItService.CateringChoice cateringChoice) {
            return base.Channel.GetCateringChoice(ref cateringChoice);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.IInventoryManagement")]
    public interface IInventoryManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/CreateNewInventory", ReplyAction="http://tempuri.org/IInventoryManagement/CreateNewInventoryResponse")]
        Client.BookItService.RequestStatus CreateNewInventory(string token, ref Client.BookItService.Inventory newInventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/ChangeInventory", ReplyAction="http://tempuri.org/IInventoryManagement/ChangeInventoryResponse")]
        Client.BookItService.RequestStatus ChangeInventory(string token, ref Client.BookItService.Inventory inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/DeleteInventory", ReplyAction="http://tempuri.org/IInventoryManagement/DeleteInventoryResponse")]
        Client.BookItService.RequestStatus DeleteInventory(string token, Client.BookItService.Inventory inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/GetInventoryByID", ReplyAction="http://tempuri.org/IInventoryManagement/GetInventoryByIDResponse")]
        Client.BookItService.RequestStatus GetInventoryByID(ref Client.BookItService.Inventory inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/GetInventoryTypes", ReplyAction="http://tempuri.org/IInventoryManagement/GetInventoryTypesResponse")]
        Client.BookItService.RequestStatus GetInventoryTypes(out Client.BookItService.InventoryType[] types);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryManagement/GetInventoryItems", ReplyAction="http://tempuri.org/IInventoryManagement/GetInventoryItemsResponse")]
        Client.BookItService.RequestStatus GetInventoryItems(out Client.BookItService.Inventory[] items, string type, bool includeAssigned);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryManagementChannel : Client.BookItService.IInventoryManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryManagementClient : System.ServiceModel.ClientBase<Client.BookItService.IInventoryManagement>, Client.BookItService.IInventoryManagement {
        
        public InventoryManagementClient() {
        }
        
        public InventoryManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.RequestStatus CreateNewInventory(string token, ref Client.BookItService.Inventory newInventory) {
            return base.Channel.CreateNewInventory(token, ref newInventory);
        }
        
        public Client.BookItService.RequestStatus ChangeInventory(string token, ref Client.BookItService.Inventory inventory) {
            return base.Channel.ChangeInventory(token, ref inventory);
        }
        
        public Client.BookItService.RequestStatus DeleteInventory(string token, Client.BookItService.Inventory inventory) {
            return base.Channel.DeleteInventory(token, inventory);
        }
        
        public Client.BookItService.RequestStatus GetInventoryByID(ref Client.BookItService.Inventory inventory) {
            return base.Channel.GetInventoryByID(ref inventory);
        }
        
        public Client.BookItService.RequestStatus GetInventoryTypes(out Client.BookItService.InventoryType[] types) {
            return base.Channel.GetInventoryTypes(out types);
        }
        
        public Client.BookItService.RequestStatus GetInventoryItems(out Client.BookItService.Inventory[] items, string type, bool includeAssigned) {
            return base.Channel.GetInventoryItems(out items, type, includeAssigned);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.IRoomManagement")]
    public interface IRoomManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/AddRoom", ReplyAction="http://tempuri.org/IRoomManagement/AddRoomResponse")]
        Client.BookItService.RequestStatus AddRoom(string token, ref Client.BookItService.Room newRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/EditRoom", ReplyAction="http://tempuri.org/IRoomManagement/EditRoomResponse")]
        Client.BookItService.RequestStatus EditRoom(string token, ref Client.BookItService.Room editedRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/RemoveRoom", ReplyAction="http://tempuri.org/IRoomManagement/RemoveRoomResponse")]
        Client.BookItService.RequestStatus RemoveRoom(string token, Client.BookItService.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/GetRoom", ReplyAction="http://tempuri.org/IRoomManagement/GetRoomResponse")]
        Client.BookItService.RequestStatus GetRoom(ref Client.BookItService.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/GetAllRooms", ReplyAction="http://tempuri.org/IRoomManagement/GetAllRoomsResponse")]
        Client.BookItService.RequestStatus GetAllRooms(out Client.BookItService.Room[] rooms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/AddInventoryItemToRoom", ReplyAction="http://tempuri.org/IRoomManagement/AddInventoryItemToRoomResponse")]
        Client.BookItService.RequestStatus AddInventoryItemToRoom(string token, int inventoryId, ref Client.BookItService.Room updatedRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomManagement/RemoveInventoryItemFromRoom", ReplyAction="http://tempuri.org/IRoomManagement/RemoveInventoryItemFromRoomResponse")]
        Client.BookItService.RequestStatus RemoveInventoryItemFromRoom(string token, int inventoryId, ref Client.BookItService.Room updatedRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomManagementChannel : Client.BookItService.IRoomManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomManagementClient : System.ServiceModel.ClientBase<Client.BookItService.IRoomManagement>, Client.BookItService.IRoomManagement {
        
        public RoomManagementClient() {
        }
        
        public RoomManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoomManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoomManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.RequestStatus AddRoom(string token, ref Client.BookItService.Room newRoom) {
            return base.Channel.AddRoom(token, ref newRoom);
        }
        
        public Client.BookItService.RequestStatus EditRoom(string token, ref Client.BookItService.Room editedRoom) {
            return base.Channel.EditRoom(token, ref editedRoom);
        }
        
        public Client.BookItService.RequestStatus RemoveRoom(string token, Client.BookItService.Room room) {
            return base.Channel.RemoveRoom(token, room);
        }
        
        public Client.BookItService.RequestStatus GetRoom(ref Client.BookItService.Room room) {
            return base.Channel.GetRoom(ref room);
        }
        
        public Client.BookItService.RequestStatus GetAllRooms(out Client.BookItService.Room[] rooms) {
            return base.Channel.GetAllRooms(out rooms);
        }
        
        public Client.BookItService.RequestStatus AddInventoryItemToRoom(string token, int inventoryId, ref Client.BookItService.Room updatedRoom) {
            return base.Channel.AddInventoryItemToRoom(token, inventoryId, ref updatedRoom);
        }
        
        public Client.BookItService.RequestStatus RemoveInventoryItemFromRoom(string token, int inventoryId, ref Client.BookItService.Room updatedRoom) {
            return base.Channel.RemoveInventoryItemFromRoom(token, inventoryId, ref updatedRoom);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookItService.IEquipmentManagement")]
    public interface IEquipmentManagement {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/CreateNewEquipmentItem", ReplyAction="http://tempuri.org/IEquipmentManagement/CreateNewEquipmentItemResponse")]
        Client.BookItService.RequestStatus CreateNewEquipmentItem(string token, ref Client.BookItService.Equipment newEquipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/ChangeEquipmentItem", ReplyAction="http://tempuri.org/IEquipmentManagement/ChangeEquipmentItemResponse")]
        Client.BookItService.RequestStatus ChangeEquipmentItem(string token, ref Client.BookItService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/DeleteEquipment", ReplyAction="http://tempuri.org/IEquipmentManagement/DeleteEquipmentResponse")]
        Client.BookItService.RequestStatus DeleteEquipment(string token, Client.BookItService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/GetEquipmentChoice", ReplyAction="http://tempuri.org/IEquipmentManagement/GetEquipmentChoiceResponse")]
        Client.BookItService.RequestStatus GetEquipmentChoice(ref Client.BookItService.EquipmentChoice equipmentChoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/GetEquipment", ReplyAction="http://tempuri.org/IEquipmentManagement/GetEquipmentResponse")]
        Client.BookItService.RequestStatus GetEquipment(ref Client.BookItService.Equipment equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/GetEquipmentTypes", ReplyAction="http://tempuri.org/IEquipmentManagement/GetEquipmentTypesResponse")]
        Client.BookItService.RequestStatus GetEquipmentTypes(out Client.BookItService.EquipmentType[] types);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEquipmentManagement/GetAllEquipment", ReplyAction="http://tempuri.org/IEquipmentManagement/GetAllEquipmentResponse")]
        Client.BookItService.RequestStatus GetAllEquipment(string type, Client.BookItService.Equipment[] items);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEquipmentManagementChannel : Client.BookItService.IEquipmentManagement, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EquipmentManagementClient : System.ServiceModel.ClientBase<Client.BookItService.IEquipmentManagement>, Client.BookItService.IEquipmentManagement {
        
        public EquipmentManagementClient() {
        }
        
        public EquipmentManagementClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EquipmentManagementClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipmentManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EquipmentManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Client.BookItService.RequestStatus CreateNewEquipmentItem(string token, ref Client.BookItService.Equipment newEquipment) {
            return base.Channel.CreateNewEquipmentItem(token, ref newEquipment);
        }
        
        public Client.BookItService.RequestStatus ChangeEquipmentItem(string token, ref Client.BookItService.Equipment equipment) {
            return base.Channel.ChangeEquipmentItem(token, ref equipment);
        }
        
        public Client.BookItService.RequestStatus DeleteEquipment(string token, Client.BookItService.Equipment equipment) {
            return base.Channel.DeleteEquipment(token, equipment);
        }
        
        public Client.BookItService.RequestStatus GetEquipmentChoice(ref Client.BookItService.EquipmentChoice equipmentChoice) {
            return base.Channel.GetEquipmentChoice(ref equipmentChoice);
        }
        
        public Client.BookItService.RequestStatus GetEquipment(ref Client.BookItService.Equipment equipment) {
            return base.Channel.GetEquipment(ref equipment);
        }
        
        public Client.BookItService.RequestStatus GetEquipmentTypes(out Client.BookItService.EquipmentType[] types) {
            return base.Channel.GetEquipmentTypes(out types);
        }
        
        public Client.BookItService.RequestStatus GetAllEquipment(string type, Client.BookItService.Equipment[] items) {
            return base.Channel.GetAllEquipment(type, items);
        }
    }
}
