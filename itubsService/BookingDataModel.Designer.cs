//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BookingDataModel", "InventoryTypeInventory", "InventoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.InventoryType), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Inventory), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "InventoryRoomInventory", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Inventory), "RoomInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.RoomInventory), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "RoomRoomInventory", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Room), "RoomInventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.RoomInventory), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "EquipmentEquipmentChoice", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Equipment), "EquipmentChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.EquipmentChoice))]
[assembly: EdmRelationshipAttribute("BookingDataModel", "CateringCateringChoice", "Catering", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Catering), "CateringChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.CateringChoice))]
[assembly: EdmRelationshipAttribute("BookingDataModel", "BookingCateringChoice", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Booking), "CateringChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.CateringChoice), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "EquipmentTypeEquipment", "EquipmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.EquipmentType), "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Equipment), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "CateringTypeCatering", "CateringType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.CateringType), "Catering", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Catering), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "EquipmentChoiceBooking", "EquipmentChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.EquipmentChoice), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Booking), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "RoomBooking", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Room), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Booking), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "PersonRole", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Person), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Role))]
[assembly: EdmRelationshipAttribute("BookingDataModel", "PersonBooking", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(itubsService.Person), "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(itubsService.Booking), true)]

#endregion

namespace itubsService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BookingDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BookingDataContext object using the connection string found in the 'BookingDataContext' section of the application configuration file.
        /// </summary>
        public BookingDataContext() : base("name=BookingDataContext", "BookingDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BookingDataContext object.
        /// </summary>
        public BookingDataContext(string connectionString) : base(connectionString, "BookingDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BookingDataContext object.
        /// </summary>
        public BookingDataContext(EntityConnection connection) : base(connection, "BookingDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Booking> Bookings
        {
            get
            {
                if ((_Bookings == null))
                {
                    _Bookings = base.CreateObjectSet<Booking>("Bookings");
                }
                return _Bookings;
            }
        }
        private ObjectSet<Booking> _Bookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Catering> Caterings
        {
            get
            {
                if ((_Caterings == null))
                {
                    _Caterings = base.CreateObjectSet<Catering>("Caterings");
                }
                return _Caterings;
            }
        }
        private ObjectSet<Catering> _Caterings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment> Equipments
        {
            get
            {
                if ((_Equipments == null))
                {
                    _Equipments = base.CreateObjectSet<Equipment>("Equipments");
                }
                return _Equipments;
            }
        }
        private ObjectSet<Equipment> _Equipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CateringChoice> CateringChoices
        {
            get
            {
                if ((_CateringChoices == null))
                {
                    _CateringChoices = base.CreateObjectSet<CateringChoice>("CateringChoices");
                }
                return _CateringChoices;
            }
        }
        private ObjectSet<CateringChoice> _CateringChoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomInventory> RoomInventories
        {
            get
            {
                if ((_RoomInventories == null))
                {
                    _RoomInventories = base.CreateObjectSet<RoomInventory>("RoomInventories");
                }
                return _RoomInventories;
            }
        }
        private ObjectSet<RoomInventory> _RoomInventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentChoice> EquipmentChoices
        {
            get
            {
                if ((_EquipmentChoices == null))
                {
                    _EquipmentChoices = base.CreateObjectSet<EquipmentChoice>("EquipmentChoices");
                }
                return _EquipmentChoices;
            }
        }
        private ObjectSet<EquipmentChoice> _EquipmentChoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentType> EquipmentTypes
        {
            get
            {
                if ((_EquipmentTypes == null))
                {
                    _EquipmentTypes = base.CreateObjectSet<EquipmentType>("EquipmentTypes");
                }
                return _EquipmentTypes;
            }
        }
        private ObjectSet<EquipmentType> _EquipmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryType> InventoryTypes
        {
            get
            {
                if ((_InventoryTypes == null))
                {
                    _InventoryTypes = base.CreateObjectSet<InventoryType>("InventoryTypes");
                }
                return _InventoryTypes;
            }
        }
        private ObjectSet<InventoryType> _InventoryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CateringType> CateringTypes
        {
            get
            {
                if ((_CateringTypes == null))
                {
                    _CateringTypes = base.CreateObjectSet<CateringType>("CateringTypes");
                }
                return _CateringTypes;
            }
        }
        private ObjectSet<CateringType> _CateringTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookings(Booking booking)
        {
            base.AddObject("Bookings", booking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Caterings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCaterings(Catering catering)
        {
            base.AddObject("Caterings", catering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipments(Equipment equipment)
        {
            base.AddObject("Equipments", equipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CateringChoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCateringChoices(CateringChoice cateringChoice)
        {
            base.AddObject("CateringChoices", cateringChoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoomInventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomInventories(RoomInventory roomInventory)
        {
            base.AddObject("RoomInventories", roomInventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentChoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentChoices(EquipmentChoice equipmentChoice)
        {
            base.AddObject("EquipmentChoices", equipmentChoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentTypes(EquipmentType equipmentType)
        {
            base.AddObject("EquipmentTypes", equipmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryTypes(InventoryType inventoryType)
        {
            base.AddObject("InventoryTypes", inventoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CateringTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCateringTypes(CateringType cateringType)
        {
            base.AddObject("CateringTypes", cateringType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Booking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Booking object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="numberOfParticipants">Initial value of the NumberOfParticipants property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="equipmentChoiceId">Initial value of the EquipmentChoiceId property.</param>
        /// <param name="roomId">Initial value of the RoomId property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Booking CreateBooking(global::System.Int32 id, global::System.String status, global::System.String numberOfParticipants, global::System.String comments, global::System.Int32 equipmentChoiceId, global::System.Int32 roomId, global::System.Int32 personId)
        {
            Booking booking = new Booking();
            booking.Id = id;
            booking.Status = status;
            booking.NumberOfParticipants = numberOfParticipants;
            booking.Comments = comments;
            booking.EquipmentChoiceId = equipmentChoiceId;
            booking.RoomId = roomId;
            booking.PersonId = personId;
            return booking;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NumberOfParticipants
        {
            get
            {
                return _NumberOfParticipants;
            }
            set
            {
                OnNumberOfParticipantsChanging(value);
                ReportPropertyChanging("NumberOfParticipants");
                _NumberOfParticipants = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NumberOfParticipants");
                OnNumberOfParticipantsChanged();
            }
        }
        private global::System.String _NumberOfParticipants;
        partial void OnNumberOfParticipantsChanging(global::System.String value);
        partial void OnNumberOfParticipantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentChoiceId
        {
            get
            {
                return _EquipmentChoiceId;
            }
            set
            {
                OnEquipmentChoiceIdChanging(value);
                ReportPropertyChanging("EquipmentChoiceId");
                _EquipmentChoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentChoiceId");
                OnEquipmentChoiceIdChanged();
            }
        }
        private global::System.Int32 _EquipmentChoiceId;
        partial void OnEquipmentChoiceIdChanging(global::System.Int32 value);
        partial void OnEquipmentChoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomId
        {
            get
            {
                return _RoomId;
            }
            set
            {
                OnRoomIdChanging(value);
                ReportPropertyChanging("RoomId");
                _RoomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomId");
                OnRoomIdChanged();
            }
        }
        private global::System.Int32 _RoomId;
        partial void OnRoomIdChanging(global::System.Int32 value);
        partial void OnRoomIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingCateringChoice", "CateringChoice")]
        public EntityCollection<CateringChoice> CateringChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CateringChoice>("BookingDataModel.BookingCateringChoice", "CateringChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CateringChoice>("BookingDataModel.BookingCateringChoice", "CateringChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentChoiceBooking", "EquipmentChoice")]
        public EquipmentChoice EquipmentChoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentChoice>("BookingDataModel.EquipmentChoiceBooking", "EquipmentChoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentChoice>("BookingDataModel.EquipmentChoiceBooking", "EquipmentChoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentChoice> EquipmentChoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentChoice>("BookingDataModel.EquipmentChoiceBooking", "EquipmentChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentChoice>("BookingDataModel.EquipmentChoiceBooking", "EquipmentChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomBooking", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomBooking", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomBooking", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomBooking", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("BookingDataModel.RoomBooking", "Room", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonBooking", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonBooking", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonBooking", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonBooking", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BookingDataModel.PersonBooking", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Catering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Catering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Catering object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="cProductName">Initial value of the cProductName property.</param>
        /// <param name="cateringTypeId">Initial value of the CateringTypeId property.</param>
        public static Catering CreateCatering(global::System.Int32 id, global::System.String price, global::System.String cProductName, global::System.Int32 cateringTypeId)
        {
            Catering catering = new Catering();
            catering.Id = id;
            catering.Price = price;
            catering.cProductName = cProductName;
            catering.CateringTypeId = cateringTypeId;
            return catering;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cProductName
        {
            get
            {
                return _cProductName;
            }
            set
            {
                OncProductNameChanging(value);
                ReportPropertyChanging("cProductName");
                _cProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cProductName");
                OncProductNameChanged();
            }
        }
        private global::System.String _cProductName;
        partial void OncProductNameChanging(global::System.String value);
        partial void OncProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CateringTypeId
        {
            get
            {
                return _CateringTypeId;
            }
            set
            {
                OnCateringTypeIdChanging(value);
                ReportPropertyChanging("CateringTypeId");
                _CateringTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CateringTypeId");
                OnCateringTypeIdChanged();
            }
        }
        private global::System.Int32 _CateringTypeId;
        partial void OnCateringTypeIdChanging(global::System.Int32 value);
        partial void OnCateringTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringCateringChoice", "CateringChoice")]
        public EntityCollection<CateringChoice> CateringChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CateringChoice>("BookingDataModel.CateringCateringChoice", "CateringChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CateringChoice>("BookingDataModel.CateringCateringChoice", "CateringChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringTypeCatering", "CateringType")]
        public CateringType CateringType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CateringType>("BookingDataModel.CateringTypeCatering", "CateringType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CateringType>("BookingDataModel.CateringTypeCatering", "CateringType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CateringType> CateringTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CateringType>("BookingDataModel.CateringTypeCatering", "CateringType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CateringType>("BookingDataModel.CateringTypeCatering", "CateringType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="CateringChoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CateringChoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CateringChoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="bookingId">Initial value of the BookingId property.</param>
        public static CateringChoice CreateCateringChoice(global::System.Int32 id, global::System.String number, global::System.String time, global::System.Int32 bookingId)
        {
            CateringChoice cateringChoice = new CateringChoice();
            cateringChoice.Id = id;
            cateringChoice.Number = number;
            cateringChoice.Time = time;
            cateringChoice.BookingId = bookingId;
            return cateringChoice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.String _Time;
        partial void OnTimeChanging(global::System.String value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingId
        {
            get
            {
                return _BookingId;
            }
            set
            {
                OnBookingIdChanging(value);
                ReportPropertyChanging("BookingId");
                _BookingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingId");
                OnBookingIdChanged();
            }
        }
        private global::System.Int32 _BookingId;
        partial void OnBookingIdChanging(global::System.Int32 value);
        partial void OnBookingIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringCateringChoice", "Catering")]
        public Catering Catering
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catering> CateringReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingCateringChoice", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="CateringType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CateringType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CateringType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cType">Initial value of the cType property.</param>
        public static CateringType CreateCateringType(global::System.Int32 id, global::System.String cType)
        {
            CateringType cateringType = new CateringType();
            cateringType.Id = id;
            cateringType.cType = cType;
            return cateringType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cType
        {
            get
            {
                return _cType;
            }
            set
            {
                OncTypeChanging(value);
                ReportPropertyChanging("cType");
                _cType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cType");
                OncTypeChanged();
            }
        }
        private global::System.String _cType;
        partial void OncTypeChanging(global::System.String value);
        partial void OncTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringTypeCatering", "Catering")]
        public EntityCollection<Catering> Caterings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Catering>("BookingDataModel.CateringTypeCatering", "Catering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Catering>("BookingDataModel.CateringTypeCatering", "Catering", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eProductName">Initial value of the eProductName property.</param>
        /// <param name="equipmentTypeId">Initial value of the EquipmentTypeId property.</param>
        public static Equipment CreateEquipment(global::System.Int32 id, global::System.String eProductName, global::System.Int32 equipmentTypeId)
        {
            Equipment equipment = new Equipment();
            equipment.Id = id;
            equipment.eProductName = eProductName;
            equipment.EquipmentTypeId = equipmentTypeId;
            return equipment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String eProductName
        {
            get
            {
                return _eProductName;
            }
            set
            {
                OneProductNameChanging(value);
                ReportPropertyChanging("eProductName");
                _eProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("eProductName");
                OneProductNameChanged();
            }
        }
        private global::System.String _eProductName;
        partial void OneProductNameChanging(global::System.String value);
        partial void OneProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentTypeId
        {
            get
            {
                return _EquipmentTypeId;
            }
            set
            {
                OnEquipmentTypeIdChanging(value);
                ReportPropertyChanging("EquipmentTypeId");
                _EquipmentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentTypeId");
                OnEquipmentTypeIdChanged();
            }
        }
        private global::System.Int32 _EquipmentTypeId;
        partial void OnEquipmentTypeIdChanging(global::System.Int32 value);
        partial void OnEquipmentTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentChoice", "EquipmentChoice")]
        public EntityCollection<EquipmentChoice> EquipmentChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentChoice>("BookingDataModel.EquipmentEquipmentChoice", "EquipmentChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentChoice>("BookingDataModel.EquipmentEquipmentChoice", "EquipmentChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentTypeEquipment", "EquipmentType")]
        public EquipmentType EquipmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentTypeEquipment", "EquipmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentTypeEquipment", "EquipmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentType> EquipmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentTypeEquipment", "EquipmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentType>("BookingDataModel.EquipmentTypeEquipment", "EquipmentType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="EquipmentChoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentChoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentChoice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        public static EquipmentChoice CreateEquipmentChoice(global::System.Int32 id, global::System.String startTime, global::System.String endTime)
        {
            EquipmentChoice equipmentChoice = new EquipmentChoice();
            equipmentChoice.Id = id;
            equipmentChoice.StartTime = startTime;
            equipmentChoice.EndTime = endTime;
            return equipmentChoice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.String _StartTime;
        partial void OnStartTimeChanging(global::System.String value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.String _EndTime;
        partial void OnEndTimeChanging(global::System.String value);
        partial void OnEndTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentChoice", "Equipment")]
        public Equipment Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentChoiceBooking", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("BookingDataModel.EquipmentChoiceBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("BookingDataModel.EquipmentChoiceBooking", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="EquipmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="eType">Initial value of the eType property.</param>
        public static EquipmentType CreateEquipmentType(global::System.Int32 id, global::System.String eType)
        {
            EquipmentType equipmentType = new EquipmentType();
            equipmentType.Id = id;
            equipmentType.eType = eType;
            return equipmentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String eType
        {
            get
            {
                return _eType;
            }
            set
            {
                OneTypeChanging(value);
                ReportPropertyChanging("eType");
                _eType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("eType");
                OneTypeChanged();
            }
        }
        private global::System.String _eType;
        partial void OneTypeChanging(global::System.String value);
        partial void OneTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentTypeEquipment", "Equipment")]
        public EntityCollection<Equipment> Equipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipment>("BookingDataModel.EquipmentTypeEquipment", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipment>("BookingDataModel.EquipmentTypeEquipment", "Equipment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="iProductName">Initial value of the iProductName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="inventoryTypeId">Initial value of the InventoryTypeId property.</param>
        public static Inventory CreateInventory(global::System.Int32 id, global::System.String iProductName, global::System.String status, global::System.Int32 inventoryTypeId)
        {
            Inventory inventory = new Inventory();
            inventory.Id = id;
            inventory.iProductName = iProductName;
            inventory.Status = status;
            inventory.InventoryTypeId = inventoryTypeId;
            return inventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iProductName
        {
            get
            {
                return _iProductName;
            }
            set
            {
                OniProductNameChanging(value);
                ReportPropertyChanging("iProductName");
                _iProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("iProductName");
                OniProductNameChanged();
            }
        }
        private global::System.String _iProductName;
        partial void OniProductNameChanging(global::System.String value);
        partial void OniProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryTypeId
        {
            get
            {
                return _InventoryTypeId;
            }
            set
            {
                OnInventoryTypeIdChanging(value);
                ReportPropertyChanging("InventoryTypeId");
                _InventoryTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryTypeId");
                OnInventoryTypeIdChanged();
            }
        }
        private global::System.Int32 _InventoryTypeId;
        partial void OnInventoryTypeIdChanging(global::System.Int32 value);
        partial void OnInventoryTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryTypeInventory", "InventoryType")]
        public InventoryType InventoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryType> InventoryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryRoomInventory", "RoomInventory")]
        public EntityCollection<RoomInventory> RoomInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomInventory>("BookingDataModel.InventoryRoomInventory", "RoomInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomInventory>("BookingDataModel.InventoryRoomInventory", "RoomInventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="InventoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="iType">Initial value of the iType property.</param>
        public static InventoryType CreateInventoryType(global::System.Int32 id, global::System.String iType)
        {
            InventoryType inventoryType = new InventoryType();
            inventoryType.Id = id;
            inventoryType.iType = iType;
            return inventoryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String iType
        {
            get
            {
                return _iType;
            }
            set
            {
                OniTypeChanging(value);
                ReportPropertyChanging("iType");
                _iType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("iType");
                OniTypeChanged();
            }
        }
        private global::System.String _iType;
        partial void OniTypeChanging(global::System.String value);
        partial void OniTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryTypeInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("BookingDataModel.InventoryTypeInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("BookingDataModel.InventoryTypeInventory", "Inventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String name, global::System.String email)
        {
            Person person = new Person();
            person.Id = id;
            person.Name = name;
            person.Email = email;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonRole", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.PersonRole", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.PersonRole", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.PersonRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BookingDataModel.PersonRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonBooking", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("BookingDataModel.PersonBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("BookingDataModel.PersonBooking", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String roleName)
        {
            Role role = new Role();
            role.Id = id;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonRole", "Person")]
        public EntityCollection<Person> People
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("BookingDataModel.PersonRole", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("BookingDataModel.PersonRole", "Person", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Room CreateRoom(global::System.Int32 id, global::System.String name, global::System.String size, global::System.String price)
        {
            Room room = new Room();
            room.Id = id;
            room.Name = name;
            room.Size = size;
            room.Price = price;
            return room;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomRoomInventory", "RoomInventory")]
        public EntityCollection<RoomInventory> RoomInventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomInventory>("BookingDataModel.RoomRoomInventory", "RoomInventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomInventory>("BookingDataModel.RoomRoomInventory", "RoomInventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomBooking", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("BookingDataModel.RoomBooking", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("BookingDataModel.RoomBooking", "Booking", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="RoomInventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoomInventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoomInventory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="inventoryId">Initial value of the InventoryId property.</param>
        /// <param name="roomId">Initial value of the RoomId property.</param>
        public static RoomInventory CreateRoomInventory(global::System.Int32 id, global::System.String number, global::System.Int32 inventoryId, global::System.Int32 roomId)
        {
            RoomInventory roomInventory = new RoomInventory();
            roomInventory.Id = id;
            roomInventory.Number = number;
            roomInventory.InventoryId = inventoryId;
            roomInventory.RoomId = roomId;
            return roomInventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryId
        {
            get
            {
                return _InventoryId;
            }
            set
            {
                OnInventoryIdChanging(value);
                ReportPropertyChanging("InventoryId");
                _InventoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryId");
                OnInventoryIdChanged();
            }
        }
        private global::System.Int32 _InventoryId;
        partial void OnInventoryIdChanging(global::System.Int32 value);
        partial void OnInventoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomId
        {
            get
            {
                return _RoomId;
            }
            set
            {
                OnRoomIdChanging(value);
                ReportPropertyChanging("RoomId");
                _RoomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomId");
                OnRoomIdChanged();
            }
        }
        private global::System.Int32 _RoomId;
        partial void OnRoomIdChanging(global::System.Int32 value);
        partial void OnRoomIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryRoomInventory", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("BookingDataModel.InventoryRoomInventory", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("BookingDataModel.InventoryRoomInventory", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("BookingDataModel.InventoryRoomInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("BookingDataModel.InventoryRoomInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomRoomInventory", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomRoomInventory", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomRoomInventory", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomRoomInventory", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("BookingDataModel.RoomRoomInventory", "Room", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
