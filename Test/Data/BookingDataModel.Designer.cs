//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BookingDataModel", "BookingPerson", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.Booking), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Person), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "BookingCateringChoice", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Booking), "CateringChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.CateringChoice), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "BookingEquipmentChoice", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Booking), "EquipmentChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.EquipmentChoice), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "EquipmentEquipmentType", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.Equipment), "EquipmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.EquipmentType), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "EquipmentEquipmentChoice", "Equipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Equipment), "EquipmentChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.EquipmentChoice), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "BookingRoom", "Booking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.Booking), "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Room), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "InventoryTypeInventory", "InventoryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.InventoryType), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.Inventory), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "PersonPersonRole", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Person), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.PersonRole), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "RolePersonRole", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Role), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.PersonRole), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "CateringCateringChoice", "Catering", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Test.Data.Catering), "CateringChoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.CateringChoice), true)]
[assembly: EdmRelationshipAttribute("BookingDataModel", "RoomInventory", "Room", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Test.Data.Room), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Test.Data.Inventory), true)]

#endregion

namespace Test.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class itubsContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new itubsContext object using the connection string found in the 'itubsContext' section of the application configuration file.
        /// </summary>
        public itubsContext() : base("name=itubsContext", "itubsContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new itubsContext object.
        /// </summary>
        public itubsContext(string connectionString) : base(connectionString, "itubsContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new itubsContext object.
        /// </summary>
        public itubsContext(EntityConnection connection) : base(connection, "itubsContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Booking> Bookings
        {
            get
            {
                if ((_Bookings == null))
                {
                    _Bookings = base.CreateObjectSet<Booking>("Bookings");
                }
                return _Bookings;
            }
        }
        private ObjectSet<Booking> _Bookings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Catering> Caterings
        {
            get
            {
                if ((_Caterings == null))
                {
                    _Caterings = base.CreateObjectSet<Catering>("Caterings");
                }
                return _Caterings;
            }
        }
        private ObjectSet<Catering> _Caterings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipment> Equipments
        {
            get
            {
                if ((_Equipments == null))
                {
                    _Equipments = base.CreateObjectSet<Equipment>("Equipments");
                }
                return _Equipments;
            }
        }
        private ObjectSet<Equipment> _Equipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CateringChoice> CateringChoices
        {
            get
            {
                if ((_CateringChoices == null))
                {
                    _CateringChoices = base.CreateObjectSet<CateringChoice>("CateringChoices");
                }
                return _CateringChoices;
            }
        }
        private ObjectSet<CateringChoice> _CateringChoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Room> Rooms
        {
            get
            {
                if ((_Rooms == null))
                {
                    _Rooms = base.CreateObjectSet<Room>("Rooms");
                }
                return _Rooms;
            }
        }
        private ObjectSet<Room> _Rooms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentChoice> EquipmentChoices
        {
            get
            {
                if ((_EquipmentChoices == null))
                {
                    _EquipmentChoices = base.CreateObjectSet<EquipmentChoice>("EquipmentChoices");
                }
                return _EquipmentChoices;
            }
        }
        private ObjectSet<EquipmentChoice> _EquipmentChoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipmentType> EquipmentTypes
        {
            get
            {
                if ((_EquipmentTypes == null))
                {
                    _EquipmentTypes = base.CreateObjectSet<EquipmentType>("EquipmentTypes");
                }
                return _EquipmentTypes;
            }
        }
        private ObjectSet<EquipmentType> _EquipmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryType> InventoryTypes
        {
            get
            {
                if ((_InventoryTypes == null))
                {
                    _InventoryTypes = base.CreateObjectSet<InventoryType>("InventoryTypes");
                }
                return _InventoryTypes;
            }
        }
        private ObjectSet<InventoryType> _InventoryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRole> PersonRoles
        {
            get
            {
                if ((_PersonRoles == null))
                {
                    _PersonRoles = base.CreateObjectSet<PersonRole>("PersonRoles");
                }
                return _PersonRoles;
            }
        }
        private ObjectSet<PersonRole> _PersonRoles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bookings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookings(Booking booking)
        {
            base.AddObject("Bookings", booking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Caterings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCaterings(Catering catering)
        {
            base.AddObject("Caterings", catering);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipments(Equipment equipment)
        {
            base.AddObject("Equipments", equipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CateringChoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCateringChoices(CateringChoice cateringChoice)
        {
            base.AddObject("CateringChoices", cateringChoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRooms(Room room)
        {
            base.AddObject("Rooms", room);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentChoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentChoices(EquipmentChoice equipmentChoice)
        {
            base.AddObject("EquipmentChoices", equipmentChoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipmentTypes(EquipmentType equipmentType)
        {
            base.AddObject("EquipmentTypes", equipmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryTypes(InventoryType inventoryType)
        {
            base.AddObject("InventoryTypes", inventoryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRoles(PersonRole personRole)
        {
            base.AddObject("PersonRoles", personRole);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Booking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Booking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Booking object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="numberOfParticipants">Initial value of the NumberOfParticipants property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        public static Booking CreateBooking(global::System.Int32 id, global::System.String status, global::System.Int32 numberOfParticipants, global::System.String comments, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 personID, global::System.Int32 roomID)
        {
            Booking booking = new Booking();
            booking.ID = id;
            booking.Status = status;
            booking.NumberOfParticipants = numberOfParticipants;
            booking.Comments = comments;
            booking.StartTime = startTime;
            booking.EndTime = endTime;
            booking.PersonID = personID;
            booking.RoomID = roomID;
            return booking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfParticipants
        {
            get
            {
                return _NumberOfParticipants;
            }
            set
            {
                OnNumberOfParticipantsChanging(value);
                ReportPropertyChanging("NumberOfParticipants");
                _NumberOfParticipants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfParticipants");
                OnNumberOfParticipantsChanged();
            }
        }
        private global::System.Int32 _NumberOfParticipants;
        partial void OnNumberOfParticipantsChanging(global::System.Int32 value);
        partial void OnNumberOfParticipantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int32 _RoomID;
        partial void OnRoomIDChanging(global::System.Int32 value);
        partial void OnRoomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingPerson", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.BookingPerson", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.BookingPerson", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.BookingPerson", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BookingDataModel.BookingPerson", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingCateringChoice", "CateringChoice")]
        public EntityCollection<CateringChoice> CateringChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CateringChoice>("BookingDataModel.BookingCateringChoice", "CateringChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CateringChoice>("BookingDataModel.BookingCateringChoice", "CateringChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingEquipmentChoice", "EquipmentChoice")]
        public EntityCollection<EquipmentChoice> EquipmentChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentChoice>("BookingDataModel.BookingEquipmentChoice", "EquipmentChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentChoice>("BookingDataModel.BookingEquipmentChoice", "EquipmentChoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingRoom", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.BookingRoom", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.BookingRoom", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.BookingRoom", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("BookingDataModel.BookingRoom", "Room", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Catering")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Catering : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Catering object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="availableFrom">Initial value of the AvailableFrom property.</param>
        /// <param name="availableTo">Initial value of the AvailableTo property.</param>
        public static Catering CreateCatering(global::System.Int32 id, global::System.Int32 price, global::System.String productName, global::System.TimeSpan availableFrom, global::System.TimeSpan availableTo)
        {
            Catering catering = new Catering();
            catering.ID = id;
            catering.Price = price;
            catering.ProductName = productName;
            catering.AvailableFrom = availableFrom;
            catering.AvailableTo = availableTo;
            return catering;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Int32 _Price;
        partial void OnPriceChanging(global::System.Int32 value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan AvailableFrom
        {
            get
            {
                return _AvailableFrom;
            }
            set
            {
                OnAvailableFromChanging(value);
                ReportPropertyChanging("AvailableFrom");
                _AvailableFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableFrom");
                OnAvailableFromChanged();
            }
        }
        private global::System.TimeSpan _AvailableFrom;
        partial void OnAvailableFromChanging(global::System.TimeSpan value);
        partial void OnAvailableFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan AvailableTo
        {
            get
            {
                return _AvailableTo;
            }
            set
            {
                OnAvailableToChanging(value);
                ReportPropertyChanging("AvailableTo");
                _AvailableTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableTo");
                OnAvailableToChanged();
            }
        }
        private global::System.TimeSpan _AvailableTo;
        partial void OnAvailableToChanging(global::System.TimeSpan value);
        partial void OnAvailableToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringCateringChoice", "CateringChoice")]
        public EntityCollection<CateringChoice> CateringChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CateringChoice>("BookingDataModel.CateringCateringChoice", "CateringChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CateringChoice>("BookingDataModel.CateringCateringChoice", "CateringChoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="CateringChoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CateringChoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CateringChoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        /// <param name="cateringID">Initial value of the CateringID property.</param>
        public static CateringChoice CreateCateringChoice(global::System.Int32 id, global::System.Int32 amount, global::System.DateTime time, global::System.String status, global::System.Int32 bookingID, global::System.Int32 cateringID)
        {
            CateringChoice cateringChoice = new CateringChoice();
            cateringChoice.ID = id;
            cateringChoice.Amount = amount;
            cateringChoice.Time = time;
            cateringChoice.Status = status;
            cateringChoice.BookingID = bookingID;
            cateringChoice.CateringID = cateringID;
            return cateringChoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingID
        {
            get
            {
                return _BookingID;
            }
            set
            {
                OnBookingIDChanging(value);
                ReportPropertyChanging("BookingID");
                _BookingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingID");
                OnBookingIDChanged();
            }
        }
        private global::System.Int32 _BookingID;
        partial void OnBookingIDChanging(global::System.Int32 value);
        partial void OnBookingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CateringID
        {
            get
            {
                return _CateringID;
            }
            set
            {
                OnCateringIDChanging(value);
                ReportPropertyChanging("CateringID");
                _CateringID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CateringID");
                OnCateringIDChanged();
            }
        }
        private global::System.Int32 _CateringID;
        partial void OnCateringIDChanging(global::System.Int32 value);
        partial void OnCateringIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingCateringChoice", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("BookingDataModel.BookingCateringChoice", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "CateringCateringChoice", "Catering")]
        public Catering Catering
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catering> CateringReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catering>("BookingDataModel.CateringCateringChoice", "Catering", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Equipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="equipmentTypeID">Initial value of the EquipmentTypeID property.</param>
        public static Equipment CreateEquipment(global::System.Int32 id, global::System.String productName, global::System.String status, global::System.Int32 equipmentTypeID)
        {
            Equipment equipment = new Equipment();
            equipment.ID = id;
            equipment.ProductName = productName;
            equipment.Status = status;
            equipment.EquipmentTypeID = equipmentTypeID;
            return equipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentTypeID
        {
            get
            {
                return _EquipmentTypeID;
            }
            set
            {
                OnEquipmentTypeIDChanging(value);
                ReportPropertyChanging("EquipmentTypeID");
                _EquipmentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentTypeID");
                OnEquipmentTypeIDChanged();
            }
        }
        private global::System.Int32 _EquipmentTypeID;
        partial void OnEquipmentTypeIDChanging(global::System.Int32 value);
        partial void OnEquipmentTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentType", "EquipmentType")]
        public EquipmentType EquipmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentEquipmentType", "EquipmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentEquipmentType", "EquipmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquipmentType> EquipmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquipmentType>("BookingDataModel.EquipmentEquipmentType", "EquipmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquipmentType>("BookingDataModel.EquipmentEquipmentType", "EquipmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentChoice", "EquipmentChoice")]
        public EntityCollection<EquipmentChoice> EquipmentChoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipmentChoice>("BookingDataModel.EquipmentEquipmentChoice", "EquipmentChoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipmentChoice>("BookingDataModel.EquipmentEquipmentChoice", "EquipmentChoice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="EquipmentChoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentChoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentChoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="bookingID">Initial value of the BookingID property.</param>
        /// <param name="equipmentID">Initial value of the EquipmentID property.</param>
        public static EquipmentChoice CreateEquipmentChoice(global::System.Int32 id, global::System.DateTime startTime, global::System.DateTime endTime, global::System.Int32 bookingID, global::System.Int32 equipmentID)
        {
            EquipmentChoice equipmentChoice = new EquipmentChoice();
            equipmentChoice.ID = id;
            equipmentChoice.StartTime = startTime;
            equipmentChoice.EndTime = endTime;
            equipmentChoice.BookingID = bookingID;
            equipmentChoice.EquipmentID = equipmentID;
            return equipmentChoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.DateTime _EndTime;
        partial void OnEndTimeChanging(global::System.DateTime value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookingID
        {
            get
            {
                return _BookingID;
            }
            set
            {
                OnBookingIDChanging(value);
                ReportPropertyChanging("BookingID");
                _BookingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BookingID");
                OnBookingIDChanged();
            }
        }
        private global::System.Int32 _BookingID;
        partial void OnBookingIDChanging(global::System.Int32 value);
        partial void OnBookingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquipmentID
        {
            get
            {
                return _EquipmentID;
            }
            set
            {
                OnEquipmentIDChanging(value);
                ReportPropertyChanging("EquipmentID");
                _EquipmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipmentID");
                OnEquipmentIDChanged();
            }
        }
        private global::System.Int32 _EquipmentID;
        partial void OnEquipmentIDChanging(global::System.Int32 value);
        partial void OnEquipmentIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingEquipmentChoice", "Booking")]
        public Booking Booking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingEquipmentChoice", "Booking").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingEquipmentChoice", "Booking").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Booking> BookingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Booking>("BookingDataModel.BookingEquipmentChoice", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Booking>("BookingDataModel.BookingEquipmentChoice", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentChoice", "Equipment")]
        public Equipment Equipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipment> EquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipment>("BookingDataModel.EquipmentEquipmentChoice", "Equipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="EquipmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipmentType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static EquipmentType CreateEquipmentType(global::System.Int32 id, global::System.String type)
        {
            EquipmentType equipmentType = new EquipmentType();
            equipmentType.ID = id;
            equipmentType.Type = type;
            return equipmentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "EquipmentEquipmentType", "Equipment")]
        public EntityCollection<Equipment> Equipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipment>("BookingDataModel.EquipmentEquipmentType", "Equipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipment>("BookingDataModel.EquipmentEquipmentType", "Equipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="inventoryTypeID">Initial value of the InventoryTypeID property.</param>
        public static Inventory CreateInventory(global::System.Int32 id, global::System.String productName, global::System.String status, global::System.Int32 inventoryTypeID)
        {
            Inventory inventory = new Inventory();
            inventory.ID = id;
            inventory.ProductName = productName;
            inventory.Status = status;
            inventory.InventoryTypeID = inventoryTypeID;
            return inventory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InventoryTypeID
        {
            get
            {
                return _InventoryTypeID;
            }
            set
            {
                OnInventoryTypeIDChanging(value);
                ReportPropertyChanging("InventoryTypeID");
                _InventoryTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InventoryTypeID");
                OnInventoryTypeIDChanged();
            }
        }
        private global::System.Int32 _InventoryTypeID;
        partial void OnInventoryTypeIDChanging(global::System.Int32 value);
        partial void OnInventoryTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoomID;
        partial void OnRoomIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryTypeInventory", "InventoryType")]
        public InventoryType InventoryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryType> InventoryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryType>("BookingDataModel.InventoryTypeInventory", "InventoryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomInventory", "Room")]
        public Room Room
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomInventory", "Room").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomInventory", "Room").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Room> RoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Room>("BookingDataModel.RoomInventory", "Room");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Room>("BookingDataModel.RoomInventory", "Room", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="InventoryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static InventoryType CreateInventoryType(global::System.Int32 id, global::System.String type)
        {
            InventoryType inventoryType = new InventoryType();
            inventoryType.ID = id;
            inventoryType.Type = type;
            return inventoryType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "InventoryTypeInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("BookingDataModel.InventoryTypeInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("BookingDataModel.InventoryTypeInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String name, global::System.String email, global::System.String token)
        {
            Person person = new Person();
            person.ID = id;
            person.Name = name;
            person.Email = email;
            person.Token = token;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingPerson", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("BookingDataModel.BookingPerson", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("BookingDataModel.BookingPerson", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonPersonRole", "PersonRole")]
        public EntityCollection<PersonRole> PersonRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("BookingDataModel.PersonPersonRole", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("BookingDataModel.PersonPersonRole", "PersonRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="PersonRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRole object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static PersonRole CreatePersonRole(global::System.Int32 personID, global::System.Int32 roleID)
        {
            PersonRole personRole = new PersonRole();
            personRole.PersonID = personID;
            personRole.RoleID = roleID;
            return personRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "PersonPersonRole", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonPersonRole", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonPersonRole", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BookingDataModel.PersonPersonRole", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BookingDataModel.PersonPersonRole", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RolePersonRole", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.RolePersonRole", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.RolePersonRole", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BookingDataModel.RolePersonRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BookingDataModel.RolePersonRole", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String roleName)
        {
            Role role = new Role();
            role.ID = id;
            role.RoleName = roleName;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RolePersonRole", "PersonRole")]
        public EntityCollection<PersonRole> PersonRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("BookingDataModel.RolePersonRole", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("BookingDataModel.RolePersonRole", "PersonRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BookingDataModel", Name="Room")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Room : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Room object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="maxParticipants">Initial value of the MaxParticipants property.</param>
        public static Room CreateRoom(global::System.Int32 id, global::System.String name, global::System.Int32 maxParticipants)
        {
            Room room = new Room();
            room.ID = id;
            room.Name = name;
            room.MaxParticipants = maxParticipants;
            return room;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxParticipants
        {
            get
            {
                return _MaxParticipants;
            }
            set
            {
                OnMaxParticipantsChanging(value);
                ReportPropertyChanging("MaxParticipants");
                _MaxParticipants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxParticipants");
                OnMaxParticipantsChanged();
            }
        }
        private global::System.Int32 _MaxParticipants;
        partial void OnMaxParticipantsChanging(global::System.Int32 value);
        partial void OnMaxParticipantsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "BookingRoom", "Booking")]
        public EntityCollection<Booking> Bookings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Booking>("BookingDataModel.BookingRoom", "Booking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Booking>("BookingDataModel.BookingRoom", "Booking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BookingDataModel", "RoomInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("BookingDataModel.RoomInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("BookingDataModel.RoomInventory", "Inventory", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
